
#include <stdio.h>
#include <string.h>

int main() {
    int k; // 第几次输入通道
    char c[10]; // 摆放的商品
    char g[6]; // 要买的商品
    int f[6][3]; // 第P个想买的商品的属性
    int a[10][3]; // a分别对应后面三个
    int p = 0;
    printf("请依次输入货品种类，通道标号，货品单价，货品个数（输入END结束）：\n");

    for (k = 0; k < 5; k++) {
        char test[10]; // 用于检验END
        scanf_s("%s", test, sizeof(test));

        if (strcmp(test, "END") == 0) { // 检查是否输入END
            break;
        }

        c[k] = test[0]; // 摆放货品种类
        for (int n = 0; n < 3; n++) {
            scanf_s("%d", &a[k][n]); // 读取通道标号，单价和个数
        }
    }

    printf("请依次输入想购买的商品，通道编号，购买个数（输入END结束）：\n");
    for (p = 0; p < 5; p++) {
        char exam[10];
        scanf_s("%s", exam, sizeof(exam));

        if (strcmp(exam, "END") == 0) { // 检查是否输入END
            break;
        }

        g[p] = exam[0]; // 摆放货品种类
        scanf_s("%d", &f[p][0]); // 通道编号
        scanf_s("%d", &f[p][1]); // 购买个数
    }

    // 记录能匹配的,加p的一律是第p个想买的,p从0开始
    int k1[6] = { -1 };
    for (k = 0; k < 5; k++) {
        for (p = 0; p < 5; p++) {
            if (c[k] == g[p] && a[k][0] == f[p][0]) {
                k1[p] = k; // 记录能匹配的
                break;
            }
        }
    }

    for (p = 0; p < 5; p++) {
        if (k1[p] != -1) {
            if (f[p][1] > a[k1[p]][2]) { // 检查购买数量是否大于剩余数量
                printf("购买数量大于剩余数量\n");
            }
            else {
                int money = f[p][1] * a[k1[p]][1]; // 计算当前商品的总金额
                if (money > 50)
                {
                    break;
                }
                printf("当前商品总金额为：%d元，请进行投币购买，仅可投入1，2，5元硬币。\n", money);

                int sum = 0; // 初始化投币金额

                while (sum < money) {
                    int coin;
                    scanf_s("%d", &coin);
                    if (coin != 1 && coin != 2 && coin != 5) {
                        printf("请输入正确的投币金额\n");
                    }
                    else {
                        sum += coin; // 累加投币金额
                    }
                }

                // 计算找零
                printf("购买成功，找零%d元\n", (sum - money));
                // 更新剩余数量
                a[k1[p]][2] -= f[p][1]; // 减少库存
                printf("购买已完成，剩余数量为：%d\n", a[k1[p]][2]);
            }
        }
        else {
            printf("请输入对应的商品\n");
        }
    }

    return 0;
}
